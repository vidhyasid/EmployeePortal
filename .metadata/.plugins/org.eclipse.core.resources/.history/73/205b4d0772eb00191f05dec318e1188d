package com.v2soft.training.controller;

import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.v2soft.training.model.Employee;
import com.v2soft.training.model.EmployeeAddress;
import com.v2soft.training.service.EmployeeList;

@Controller
public class EmployeeController {
	
	private EmployeeList employeeList = new EmployeeList();
	
	//http://localhost:8080/EmployeePortal/getEmployeeById/{id}
	@RequestMapping(value="/getEmployeeById/{employeeId}", method=RequestMethod.GET)
	@ResponseBody
	public String getEmployeeById(@PathVariable String employeeId) throws JsonProcessingException {
		Employee employee = employeeList.getEmployeeById(employeeId);
		ObjectMapper objectMapper = new ObjectMapper();
		String json = objectMapper.writeValueAsString(employee);
		return json;
	}
	
	//http://localhost:8080/EmployeePortal/getEmployeeByFirstName/{fn}
	@RequestMapping(value="/getEmployeeByFirstName/{firstname}", method=RequestMethod.GET)
	@ResponseBody
	public String getEmployeeByFirstName(@PathVariable String firstname) throws JsonProcessingException {
		List<Employee> list = employeeList.getEmployeeByFirstName(firstname);
		ObjectMapper objectMapper = new ObjectMapper();
		String json = objectMapper.writeValueAsString(employee);
		return json;
	}
	
	//http://localhost:8080/EmployeePortal/getEmployeeByLastName/{ln}
	@RequestMapping(value="/getEmployeeByLastName/{lastname}", method=RequestMethod.GET)
	@ResponseBody
	public String getEmployeeByLastName(@PathVariable String lastname) throws JsonProcessingException {
		List<Employee> list = employeeList.getEmployeeByLastName(lastname);
		ObjectMapper objectMapper = new ObjectMapper();
		String json = objectMapper.writeValueAsString(employee);
		return json;
	}
	
	//http://localhost:8080/EmployeePortal/getAllEmployees
	@RequestMapping(value="/getAllEmployees", method=RequestMethod.GET)
	@ResponseBody
	public String getAllEmployees() throws JsonProcessingException {
		String result = "";
		ObjectMapper objectMapper = new ObjectMapper();
		for(int i = 0; i < employeeList.size(); i++) {
			result += "\n" + objectMapper.writeValueAsString(employeeList.get(i));
		}
		
		return result;
	}
	
	/*
	{"employeeId":"emp6","firstName":"Test","lastName":"Employee","middleName":"XYZ","dateOfBirth":413454322345,"passportNumber":"67890123","ssn":"SSN12435","employeeAddresses":[]} 
	 */
	//http://localhost:8080/EmployeePortal/addEmployee
	@RequestMapping(value="/addEmployee", method=RequestMethod.POST)
	public ModelAndView addEmployee(@RequestBody String json) throws JsonMappingException, JsonProcessingException {
		ObjectMapper mapper = new ObjectMapper();
		Employee em = mapper.readValue(json, Employee.class);
		employeeList.addToList(em);
		
		return new ModelAndView("redirect:http://localhost:8080/EmployeePortal/getAllEmployees");
	}
	
	//http://localhost:8080/EmployeePortal/removeEmployeeById/{id}
	@RequestMapping(value="/removeEmployeeById/{employeeId}", method=RequestMethod.POST)
	public ModelAndView removeEmployeeById(@PathVariable String employeeId) throws JsonProcessingException {
		employeeList.removeEmployeeById(employeeId);
		
		return new ModelAndView("redirect:http://localhost:8080/EmployeePortal/getAllEmployees");
	}
	
	
	private String list(List<Employee> list) {
		ObjectMapper objectMapper = new ObjectMapper();
		for(int i = 0; i < list.size(); i++) {
			result += "\n" + objectMapper.writeValueAsString(list.get(i));
		}
		
		return result;
	}
	
	
	/*private void printEmployee(Employee em) {
		System.out.println(em.getEmployeeId());
		System.out.println(em.getFirstName());
		System.out.println(em.getLastName());
		System.out.println(em.getMiddleName());
		System.out.println(em.getPassportNumber());
		System.out.println(em.getSsn());
		System.out.println(em.getDateOfBirth());
		System.out.println(em.getEmployeeAddresses());
	}*/
}
