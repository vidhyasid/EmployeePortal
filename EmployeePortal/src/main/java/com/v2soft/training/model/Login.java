package com.v2soft.training.model;

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * Login generated by hbm2java
 */
@Entity
@Table(name = "login", catalog = "employee")
public class Login implements java.io.Serializable {

	private String userName;
	private Employee employeeinfo;
	private String password;
	private Set<LoginSession> loginSessions = new HashSet<LoginSession>(0);

	public Login() {
	}

	public Login(String userName, Employee employeeinfo, String password) {
		this.userName = userName;
		this.employeeinfo = employeeinfo;
		this.password = password;
	}

	public Login(String userName, Employee employeeinfo, String password, Set<LoginSession> loginSessions) {
		this.userName = userName;
		this.employeeinfo = employeeinfo;
		this.password = password;
		this.loginSessions = loginSessions;
	}

	@Id

	@Column(name = "userName", unique = true, nullable = false, length = 20)
	public String getUserName() {
		return this.userName;
	}

	public void setUserName(String userName) {
		this.userName = userName;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Employee_id", nullable = false)
	public Employee getEmployeeinfo() {
		return this.employeeinfo;
	}

	public void setEmployeeinfo(Employee employeeinfo) {
		this.employeeinfo = employeeinfo;
	}

	@Column(name = "password", nullable = false, length = 20)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "login")
	@JsonIgnore
	public Set<LoginSession> getLoginSessions() {
		return this.loginSessions;
	}

	public void setLoginSessions(Set<LoginSession> loginSessions) {
		this.loginSessions = loginSessions;
	}

}
